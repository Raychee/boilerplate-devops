#!/usr/bin/env bash
# This file:
#
#  - Dump a docker volume into a tar file. 
#
# Usage:
#
#  LOG_LEVEL=7 ./docker-volume-dump <docker_volume>


### Parse commandline options
##############################################################################

# Commandline options. This defines the usage page, and is used to parse cli
# opts & defaults from. The parsing is unforgiving so be precise in your syntax
# - A short option must be preset for every long option; but every short option
#   need not have a long option
# - `--` is respected as the separator between options and arguments
# - We do not bash-expand defaults, so setting '~/app' as a default will not resolve to ${HOME}.
#   you can use bash variables to work around this (so use ${HOME} instead)

# shellcheck disable=SC2015
read -r -d '' __usage <<-EOF || true # exits non-zero when EOF encountered
  -z --compress  Dump as a compressed tar file (tar.gz).
  -h --help      This page.
  
  {volume}       The docker volume name. Required.
  [dir]          The directory path into which the tar file is dumped. Default=".".
EOF

# shellcheck disable=SC2015
read -r -d '' __helptext <<-EOF || true # exits non-zero when EOF encountered
 This script backs up a docker volume by dumping all the files into a single tar file.
EOF

# shellcheck source=lib/common
source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/lib/common"


### Validation. Error out if the things required for your script are not present
##############################################################################

docker volume inspect "${arg_volume:?}" > /dev/null 2>&1 || help "Docker volume \"${arg_volume}\" does not exist."
[[ -d ${arg_dir:?} ]] || help "Target directory ${arg_dir} does not exist."

if [[ "${arg_dir}" = /* ]]; then
  __target_dir=
else
  __target_dir=$(cd "$(pwd)/${arg_dir}" && pwd)
fi
[[ -d ${__target_dir} ]] || help "Target directory ${__target_dir} does not exist."


### Runtime
##############################################################################

if [[ "${arg_z}" = "1" ]]; then
  __target_file_name="${arg_volume}.tar.gz"
  __tar_arg="z"
else 
  __target_file_name="${arg_volume}.tar"
  __tar_arg=
fi

info "Dump docker volume \"${arg_volume}\" into ${arg_dir}/${__target_file_name}."
exec_with_debug docker run --rm \
  --volume "${arg_volume}":/__volume__ --volume "${__target_dir}":/__host_dir__ busybox \
  tar -${__tar_arg}cvf "/__host_dir__/${__target_file_name}" /__volume__
