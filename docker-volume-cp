#!/usr/bin/env bash
# This file:
#
#  - Copy a docker volume into another volume. 
#
# Usage:
#
#  LOG_LEVEL=7 ./docker-volume-cp <docker_volume> <docker_volume_copied>


### Parse commandline options
##############################################################################

# Commandline options. This defines the usage page, and is used to parse cli
# opts & defaults from. The parsing is unforgiving so be precise in your syntax
# - A short option must be preset for every long option; but every short option
#   need not have a long option
# - `--` is respected as the separator between options and arguments
# - We do not bash-expand defaults, so setting '~/app' as a default will not resolve to ${HOME}.
#   you can use bash variables to work around this (so use ${HOME} instead)

# shellcheck disable=SC2015
read -r -d '' __usage <<-EOF || true # exits non-zero when EOF encountered
  -o --overwrite  Overwrite the target volume if it already exists. 
  -h --help       This page.
  -v              Enable verbose mode, print script as it is executed.
  -d --debug      Enables debug mode.
  -n --no-color   Disable color output.
  
  {source}        The docker volume to copy. Required.
  {target}        The target docker volume to copy into. Required.
EOF

# shellcheck disable=SC2015
read -r -d '' __helptext <<-EOF || true # exits non-zero when EOF encountered
 This script copies all the files from a docker volume into another volume.
 The target volume specified by -t (--to) must not exist, unless -o (--overwrite) is given. 
EOF

# shellcheck source=lib/common
source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/lib/common"


### Validation. Error out if the things required for your script are not present
##############################################################################

docker volume inspect "${arg_source:?}" > /dev/null 2>&1 || help "Docker volume \"${arg_source}\" does not exist."
if [[ "${arg_o:?}" = "0" ]] && docker volume inspect "${arg_target:?}" > /dev/null 2>&1; then
  help "Target docker volume \"${arg_target}\" already exists."
fi


### Runtime
##############################################################################

info "Copy from docker volume \"${arg_source}\" into volume \"${arg_target}\"."
exec_with_debug "docker run --rm" \
  "--volume \"${arg_source}\":/__src_vol__ --volume \"${arg_target}\":/__dst_vol__ busybox" \
  "sh -c \"cp -av /__src_vol__/* /__dst_vol__/ &&" \
    "chown \\\$(stat -c %u:%g /__src_vol__) /__dst_vol__ && chmod \\\$(stat -c %a /__src_vol__) /__dst_vol__\"\""
